Index: foot/pdai/spring/01.spring-base.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## Spring\n\n\n\n### Spring基础\n\n\n\n官网：\n\n[Spring官网](https://docs.spring.io/spring-framework/docs/current/reference/html/index.html)\n\n[Gihup源码](https://github.com/spring-projects/spring-framework)\n\n[Spring  DOC](https://docs.spring.io/spring-framework/docs/)\n\n\n\n#### 目的\n\n> 此前企业会使用的技术:EJB(Enterprise Java Beans)，复杂、效率低，效率低体现在调用(涉及远程调用、使用EJB封装业务逻辑业务低)、代码重用性低。\n>\n> Spring的一个最大的目的就是使Java EE 开发更加容易，并且Spring是一个及易扩展的框架，可以很容易集成其他组件。\n\n#### 特点\n\n- 非侵入式：\n\n  > 使用Spring开发的应用中的对象可以不依赖于Spring的Api。Spring这类的非侵入式框架都是使用反射＋代理来实现对象的创建和实例化。\n\n- 控制反转：\n\n  > IOC -  Inversion Of   Controller。\n  >\n  > 对象的创建由客户端主动New反转为由Spring创建，对象的生命周期由Spring控制。\n\n- 依赖注入：\n\n  > DI  -  Dependency Injection\n  >\n  > 某个Bean所依赖的对象(组合进来的对象)，无需手动setXXX()，而是由Spring配置自动注入。\n\n- 面向切面编程：\n\n  > AOP - Aspect Oriented Programming\n  >\n  > 可降低耦合，核心1就是反射＋代理\n\n- 容器思想：\n\n  > Spring就是一个Bean容器，负责Bean的创建和生命周期的管理。\n  >\n  > 将用得到的Bean放入容器，在需要使用的时候往Spring容器中去取。\n\n- 组件：\n\n  > Spring的扩展性很好，只需要简单配置就可以以组件的形式将组件整合进来。\n\n- 一站式：\n\n  > Spring生态完备，同时在IOC、AOP的基础上可整合任意企业级组件和第三方类库，可一站式开发应用\n\n  \n\n#### 优点\n\n- 按需注册，Spring只会安需组测需要的Bean对象到SpringIOC容器中，而忽略不需要的Bean。\n- 生态完备，且扩展性优秀。Spring可完美整合优秀框架，比如ORM框架、日志框架等\n- 测试简单，只需简单注解即可完成测试\n- Spring除了IOC、AOP技术外，还提供一套模式思想，即MVC模式，使得代码可实现松耦合、高内聚。\n- 对于一些复杂且逻辑相似的操作提供封装API，使得开发者使用起来非常容易。比如JavaMail、JDBC、远程调用等。\n- 轻量级、高效。更加高效利用CPU和内存资源。与EJB对比更能体现\n\n\n\n#### Spring各个模块\n\n> Spring生态体系非常完善，由许多模块组成。\n\n##### Core\n\n> Core包含了Spring框架的基础部分。\n\n包括：\n\n- Beans 模块  包括IOC 和DI\n- Core   核心模块，封装Spring底层实现，包括资源访问、类型转化以及一些常用工具类\n- Context  上下文模块\n- SPEL    支持强大的表达式语言\n\n\n\n##### Data  Access\n\n> 数据访问集成。\n\n- Transaction   事务管理：支持编程式事务和响应式事务\n- JDBC：提供统一数据库连接规范，并且易于Spring接管事务\n- ORM，Object Relation Mapper，自动关系映射，可无缝集成市面上主流ORM框架\n- OXM：提供Object/XML映射实现\n- JMS：java消息服务\n\n\n\n##### Web\n\n- Web\n- Servlet    \n- WebSocket   通讯\n- Webflux   新型响应式web框架\n\n##### Test\n\n> 测试模块。\n>\n> 支持Junit和TestNG，方便测试。\n\n\n\n#### Spring  HelloWorld\n\n> Spring框架简单使用\n\n##### HelloWorld\n\n- 创建一个maven模块\n\n- 引入Spring依赖\n\n  > Spring-context 依赖Spring-beans、Spring-core、Spring-aop，此demo只引入Spring-context足矣。\n\n  ```xml\n  <!-- spring-context -->\n  <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>${spring.context.version}</version>\n  </dependency>\n  <spring.context.version>5.3.23</spring.context.version>\n  ```\n\n- 实体类User\n\n  > 需要引入Lombok\n\n  ```java\n  @Data\n  @AllArgsConstructor\n  public class User {\n      String name;\n      String email;\n  }\n  ```\n\n- 配置Spring配置文件\n\n  > Spring配置文件模板可从网上拷贝，[官网也有模板](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#spring-core)。\n  >\n  > 根标签是一个`<Beans>`可见这就是一个Bean容器，文件由命名空间和具体Bean组成\n\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <beans xmlns=\"http://www.springframework.org/schema/beans\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">\n      <bean id=\"user\" class=\"com.roily.entity.User\" scope=\"singleton\">\n          <constructor-arg type=\"java.lang.String\" name=\"name\" value=\"yuyuc\"/>\n          <constructor-arg type=\"java.lang.String\" name=\"email\" value=\"emali\"/>\n      </bean>\n  </beans>\n  ```\n  \n- 测试\n\n  > 这里使用配置文件的方式配置Spring，通过BeanFactory的子类之一ClassPatchXmlApplicationContext加载Spring配置文件，将Bean注册到Spring容器中。\n\n  <img src=\"https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253219.png\" alt=\"image-20220926131901678\" style=\"zoom:33%;\" />\n\n  ```java\n  public class demo {\n      public static void main(String[] args) {\n          final ApplicationContext classPathXmlApplicationContext = new ClassPathXmlApplicationContext(\"application.xml\");\n          final User user = classPathXmlApplicationContext.getBean(\"user\", User.class);\n          System.out.println(user);\n      }\n  }\n  ```\n\n   ![image-20220926131931361](https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253016.png)\n\n\n\n##### 加入mybatis和AOP\n\n> 在以上基础上加入mybatis和AOP。\n>\n> Spring是一个容器，需要任何组件(组件用于实现某种功能)，直接往容器中注册即可。\n\n######  依赖\n\n```xml\n<!--  mysql      -->\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n</dependency>\n<!--   mybatis  -->\n<dependency>\n    <groupId>org.mybatis</groupId>\n    <artifactId>mybatis</artifactId>\n</dependency>\n\n<dependency>\n    <groupId>org.mybatis</groupId>\n    <artifactId>mybatis-spring</artifactId>\n    <version>2.0.6</version>\n</dependency>\n<dependency>\n    <groupId>org.springframework</groupId>\n    <artifactId>spring-jdbc</artifactId>\n    <version>5.3.12</version>\n</dependency>\n<dependency>\n    <groupId>org.aspectj</groupId>\n    <artifactId>aspectjweaver</artifactId>\n</dependency>\n```\n\n###### 配置\n\n- 数据库配置db.properties\n\n  ```properties\n  driver=com.mysql.cj.jdbc.Driver\n  url=jdbc:mysql://localhost:3306/mybatis?useUnicode=true;characterEncoding=utf8;useSSL=true\n  user=root\n  password=123456\n  ```\n\n- mybatis配置\n\n  > 配置日志和别名即可，其他放入spring中配置。\n  >\n  > [mybatis配置文件模板](https://mybatis.org/mybatis-3/zh/getting-started.html)\n\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n  <!DOCTYPE configuration\n          PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n          \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n  <configuration>\n      <!--  日志配置和二级缓存  -->\n      <settings>\n          <setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>\n          <setting name=\"cacheEnabled\" value=\"true\"/>\n      </settings>\n      <!--  别名配置，默认类名小写  -->\n      <typeAliases>\n          <package name=\"com.roily.entity\"/>\n      </typeAliases>\n  </configuration>\n  ```\n\n- Spring-dao配置\n\n  > 包括数据源、Sqlsessionfactory和Sqlsession、mapper等\n\n  ```xml\n  <!--  引入外部配置文件  -->\n  <context:property-placeholder location=\"db.properties\"/>\n  <!--    &lt;!&ndash;  注册数据源  &ndash;&gt;-->\n  <bean id=\"dataSource\" class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\n  \t   <property name=\"driverClassName\" value=\"${driver}\"/>\n          <property name=\"url\" value=\"${url}\"/>\n          <property name=\"username\" value=\"${user}\"/>\n          <property name=\"password\" value=\"${password}\"/>\n  </bean>\n  \n  <!--  注册SqlSessionFactory,指定mybatis配置和mapper路径  -->\n  <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n      <property name=\"dataSource\" ref=\"dataSource\"/>\n      <property name=\"configLocation\" value=\"classpath:mybatis-config.xml\"/>\n      <property name=\"mapperLocations\" value=\"classpath:mapper/UserMapper.xml\"/>\n  </bean>\n  \n  <!--  组测sqlSession,构造器注入,注意必须构造器注入，没有set注入-->\n  <bean id=\"sqlSession\" class=\"org.mybatis.spring.SqlSessionTemplate\">\n      <constructor-arg name=\"sqlSessionFactory\" ref=\"sqlSessionFactory\"/>\n  </bean>\n  \n  <!--    扫描mapper -->\n  <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n      <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\n      <property name=\"basePackage\" value=\"com.roily.mapper\"/>\n  </bean>\n  ```\n  \n- Application。xml\n\n  > Spring整合配置\n\n  ```xml\n  <aop:aspectj-autoproxy/>\n  <!--    引入外部配置  -->\n  <import resource=\"classpath:spring-dao.xml\"/>\n  <bean id=\"userServiceImpl\" class=\"com.roily.service.impl.UserServiceImpl\">\n      <property name=\"userMapper\" ref=\"userMapper\"/>\n  </bean>\n  <bean id=\"logAspectj\" class=\"com.roily.common.aop.LogAspect\">\n  </bean>\n  ```\n\n######  dao & service\n\n> 类\n\nUserMapper  &  UserService  & Mapper  Xml\n\n```java\npublic interface UserMapper {\n    List<User> getAll();\n}\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.roily.mapper.UserMapper\">\n    <select id=\"getAll\" resultType=\"user\">\n        select name, email\n        from user\n    </select>\n\n</mapper>\n```\n\n> 注意Lombok会为我们自动加上setter方法\n\n```java\npublic interface UserService {\n    List<User> getAll();\n}\n@Data\npublic class UserServiceImpl  implements UserService {\n    private UserMapper userMapper;\n    @Override\n    public List<User> getAll() {\n        return userMapper.getAll();\n    }\n}\n```\n\n\n\n###### Aspect\n\n> 定义切面和切入点\n\n```java\n@Aspect\npublic class LogAspect {\n    /**\n     * 任意返回值\n     * com.roily.service包下任意方法  （。。）代表任意参数的方法\n     */\n    @Pointcut(\"execution(* com.roily.service.*.*(..))\")\n    public void pointCut() {\n    }\n    @Around(\"pointCut()\")\n    public Object logAspect(ProceedingJoinPoint proceedingJoinPoint) throws Throwable {\n        final MethodSignature signature = (MethodSignature)proceedingJoinPoint.getSignature();\n        final Method method = signature.getMethod();\n        System.out.println(\"===================================\");\n        System.out.println(\"方法名=>\"+method.getName());\n        System.out.println(\"方法参数=>\");\n        Arrays.asList(method.getParameters()).forEach(System.out::print);\n        System.out.println(\"执行中。。。。。\");\n        final Object proceed = proceedingJoinPoint.proceed();\n        System.out.println(\"执行结束。。。。。\");\n        System.out.println(\"===================================\");\n        return proceed;\n    }\n}\n```\n\n\n\n###### 测试\n\n> 可顺利执行，且切面起了作用\n\n```java\npublic static void main(String[] args) {\n    final ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\n    final UserService userService = applicationContext.getBean(\"userServiceImpl\", UserService.class);\n    final List<User> all = userService.getAll();\n    System.out.println(all);\n}\n```\n\n![image-20220926173755829](https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253776.png)\n\n\n\n###### 整体结构\n\n<img src=\"https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253177.png\" alt=\"image-20220926225332618\" style=\"zoom:50%;\" />\n\n\n\n##### 结\n\n> 以上例子做小结。Spring的作用。\n\n###### IOC\n\n> 控制反转。\n>\n> 没有Spring框架，我们需要手动new对象来使用，对象的创建和使用强依赖。现在有了Spring框架，对象的创建交由Spring管理，当我们需要使用某个类时，则去容器中拿取即可。如此简化开发，对象的创建和使用也分离开来。\n\n- 控制反转-控制什么？控制Bean的创建和使用。什么反转了？Bean的创建由用户反转为Spring。这就是IOC(Inversion of controler)\n- Spring创建的bean放在哪里？  IOC  Container\n- 配置Spring有哪些方式？ xml配置文件、javaConfig和注解配置\n- bean从Spring  IOC  Container  中获取依赖，注入到当前bean中，此过程叫做依赖注入-DI(Dependency  injection )\n- 依赖注入的方式（构造器注入、Set注入）\n- @Autowrite  @Resource  @inject\n\n\n\n###### AOP\n\n> 在以上例子中我们定义了一个切面LogAspect，切入点设置为所有的service下的方法，以此我们避免在每一个Service中都打印日志的操作，本质上是一个解耦的操作。\n>\n> Spring的Aop模块使用的是动态代理，通过代理对象对原方法进行增强，使用Aop可避免大量侵入式扩展操作。 \n\n- AOP(Aspect Oriented Programming)，Spring可将重复业务抽象出来定义为切面，实现程序的解耦，提高代码复用\n\n- @Aspect是aspectj下的注解，Spring认可并为其提供兼容方案\n- 丰富的拦截方式，@around  @before  @after @afterThrowing @afterReturing等\n- Aop使用的是代理技术\n\n#### JavaConfig\n\n> Spring的配置方式除了xml配置文件之外，还有JavaConfig方式。\n>\n> xml配置文件配置过于繁琐，以上例子就有感觉，如果项目较大，配置繁琐。JavaConfig使用对程序员友好的方式来简化配置，但是大量使用JavaConfig也会使得代码可读性较差。\n\n以上例子bean、service、mapper和aspct不用动，只使用JavaConfig来代替application.xml。\n\n- 数据库配置，使用Properties工具，需要注意的是DriverManagerDataSource对于Properties的键值有一定要求。分别是url、username、password。或者使用DriverManagerDataSource(String,String,String)这个重载构造函数\n- 注册DriverManagerDataSource\n- 注册SqlsessionFactoryBean\n- 注册SqlSessionTemplate\n- 注册UserMapper、UserService以及LogAspect\n\n```java\n@EnableAspectJAutoProxy//aop,支持代理类\n@Configuration//声明此类为配置类\npublic class ApplicationConfig {\n    \n    /**\n     * 数据库配置\n     *\n     * @return\n     */\n    @Bean(\"jdbcProperties\")\n    public Properties jdbcProperties() {\n        final InputStream in = ApplicationConfig.class.getClassLoader().getResourceAsStream(\"db.properties\");\n        final Properties properties = new Properties();\n        try {\n            properties.load(in);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return properties;\n    }\n\n    @Bean(\"dataSource\")\n    public DataSource driverManagerDataSource(Properties jdbcProperties) {\n        return new DriverManagerDataSource(jdbcProperties.getProperty(\"url\"), jdbcProperties);\n    }\n\n    @Bean(\"sqlSessionFactory\")\n    public SqlSessionFactoryBean sqlSessionFactory(DataSource dataSource) throws IOException {\n        final SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();\n        PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n        sqlSessionFactoryBean.setDataSource(dataSource);\n        sqlSessionFactoryBean.setConfigLocation(resolver.getResource(\"classpath:mybatis-config.xml\"));\n        sqlSessionFactoryBean.setMapperLocations(resolver.getResources(\"classpath:mapper/*.xml\"));\n        return sqlSessionFactoryBean;\n    }\n\n    @Bean(\"sqlSession\")\n    public SqlSession sqlSession(SqlSessionFactory sqlSessionFactory) {\n        return new SqlSessionTemplate(sqlSessionFactory);\n    }\n\n    @Bean(\"userMapper\")\n    public UserMapper userMapper(SqlSession sqlSession) {\n        return sqlSession.getMapper(UserMapper.class);\n    }\n\n    @Bean(\"userService\")\n    public UserService userService(UserMapper userMapper) {\n        final UserServiceImpl userService = new UserServiceImpl();\n        userService.setUserMapper(userMapper);\n        return userService;\n    }\n\n    @Bean(\"logAspect\")\n    public LogAspect logAspect() {\n        return new LogAspect();\n    }\n}\n```\n\n测试：\n\n> 也可以达到同样的效果\n\n```java\nfinal AnnotationConfigApplicationContext ac = new AnnotationConfigApplicationContext(ApplicationConfig.class);\nfinal UserService userService = ac.getBean(\"userService\", UserService.class);\nfinal List<User> all = userService.getAll();\nSystem.out.println(all);\n```\n\n\n\n#### 注解+扫描\n\n> 通过注解加扫描的机制改进以上代码\n\n对ApplicationConfig稍作修改，数据源、sqlSession等不做改动，修改Mapper、service、Aspect：\n\n- 给UserMapper加上@Mapper注解\n\n  ```java\n  @Mapper\n  public interface UserMapper {\n      List<User> getAll();\n  }\n  ```\n\n- 给UserServiceImpl加上@service注解，并且在usermapper上加上@Autowrite注入注解\n\n  ```java\n  @Service\n  @Data\n  public class UserServiceImpl  implements UserService {\n      @Autowired\n      private UserMapper userMapper;\n      @Override\n      public List<User> getAll() {\n          return userMapper.getAll();\n      }\n  }\n  ```\n\n- 给LogAspect加上@Component注解\n\n  ```java\n  @Aspect\n  @Component\n  public class LogAspect {}\n  ```\n\n- javaconfig配置，保留数据源等配置，添加组件扫描和mapper扫描注解\n\n  ```java\n  @EnableAspectJAutoProxy//aop,支持代理类\n  @Configuration//声明此类为配置类\n  @ComponentScan(basePackages = \"com.roily\")\n  @MapperScan(basePackages = \"com.roily.mapper\")\n  public class ApplicationASConfig {\n  \n      /**\n       * 数据库配置\n       *\n       * @return\n       */\n      @Bean(\"jdbcProperties\")\n      public Properties jdbcProperties() {\n          final InputStream in = ApplicationASConfig.class.getClassLoader().getResourceAsStream(\"db.properties\");\n          final Properties properties = new Properties();\n          try {\n              properties.load(in);\n          } catch (IOException e) {\n              e.printStackTrace();\n          }\n          return properties;\n      }\n  \n      @Bean(\"dataSource\")\n      public DataSource driverManagerDataSource(Properties jdbcProperties) {\n          return new DriverManagerDataSource(jdbcProperties.getProperty(\"url\"), jdbcProperties);\n      }\n  \n      @Bean(\"sqlSessionFactory\")\n      public SqlSessionFactoryBean sqlSessionFactory(DataSource dataSource) throws IOException {\n  \n          final SqlSessionFactoryBean sqlSessionFactoryBean = new SqlSessionFactoryBean();\n          PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n          sqlSessionFactoryBean.setDataSource(dataSource);\n          sqlSessionFactoryBean.setConfigLocation(resolver.getResource(\"classpath:mybatis-config.xml\"));\n          sqlSessionFactoryBean.setMapperLocations(resolver.getResources(\"classpath:mapper/*.xml\"));\n          return sqlSessionFactoryBean;\n      }\n  \n      @Bean(\"sqlSession\")\n      public SqlSession sqlSession(SqlSessionFactory sqlSessionFactory) {\n          return new SqlSessionTemplate(sqlSessionFactory);\n      }\n     \n  }\n  ```\n\n\n\n#### IOC容器配置方式\n\n> IOC容器配置的三种方式及优缺点\n\n- XML文件配置，通过命名空间和`<bean>`标签配置bean\n\n  > 适用于任何场景，易于理解\n  >\n  > 项目大的话，配置非常繁琐\n\n- JavaConfig\n\n  > 使用JavaConfig代替xml，使用@Bean代替`<bean>`标签\n  >\n  > 存java代码配置，扩展性好，易于理解\n  >\n  > 配置多的话，可读性较差\n\n- 注解+扫描\n\n  > 这是目前常用的方式\n  >\n  > 简洁、易懂，按约定配置后期项目易于维护\n  >\n  > 存在局限性，对于不兼容组件，需要配合xml配置\n\n\n\n#### 依赖注入的三种方式\n\n> 依赖注入的三种方式。\n\n- Setter注入\n- 构造器注入（Construct）\n- 基于注解自动注入\n\n##### Setter注入\n\n> 属性中使用`<property>`标签初始化属性的都是Setter注入。\n\nsetter注入本质上是会首先调用无参构造方法生产一个Bean，再通过set方法将属性注入。\n\n所以使用set注入的Bean必须拥有无参构造方法，属性必须存在对应setter方法。\n\n例：\n\n```java\npublic class User {\n\n    String name;\n\n    public User() {\n        System.out.println(\"User   init\");\n    }\n\n    public void setName(String name) {\n        this.name = name;\n        System.out.println(\"seName\");\n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"name='\" + name + '\\'' +\n                '}';\n    }\n}\n```\n\n```java\n<bean id=\"user\" name=\"userAlias\" class=\"com.roily.entity.User\">\n    <property name=\"name\" value=\"yuyc\"/>\n</bean>\n```\n\n\n\n##### 构造器注入\n\n> 使用`constructor-arg`标签的都是构造器注入。\n\n使用`<constructor-arg>`本质上是调用Person(String name, String age, String email)构造器，构造方法参数数量必须匹配。\n\n例：\n\n```java\npublic class Person {\n\n    String name;\n    String age;\n    String email;\n\n    public Person(String name, String age, String email) {\n        this.name = name;\n        this.age = age;\n        this.email = email;\n    }\n\n    @Override\n    public String toString() {\n        return \"Person{\" +\n                \"name='\" + name + '\\'' +\n                \", age='\" + age + '\\'' +\n                \", email='\" + email + '\\'' +\n                '}';\n    }\n}\n```\n\n```xml\n<bean id=\"person\" class=\"com.roily.entity.Person\">\n    <constructor-arg name=\"age\" value=\"1\"/>\n    <constructor-arg name=\"name\" value=\"1\"/>\n    <constructor-arg name=\"email\" value=\"1\"/>\n</bean>\n```\n\n\n\n##### 注解注入\n\n> 使用注解注入。xml+注解或JavaConfig+注解\n\nXml+ 注解\n\n```java\npublic class UserDao {\n}\npublic class UserService {\n    private UserDao userDao;\n    @Autowired//可以省略\n    public void setUserDao(（ @Autowired/*可以放也可以不放*/ ）UserDao userDao) {\n        this.userDao = userDao;\n    }\n    @Override\n    public String toString() {\n        return \"UserService{\" +\n                \"userDao=\" + userDao +\n                '}';\n    }\n}\n```\n\nxml配置文件：\n\n```xml\n<bean id=\"userDao\" class=\"com.roily.dao.UserDao\"/>\n<bean id=\"userService\" class=\"com.roily.service.UserService\" autowire=\"byType\">\n</bean>\n```\n\n\n\nJavaConfig + 注解\n\n```java\n@Configuration\npublic class ApplicationConfig {\n    @Bean\n    UserDao userDao(){\n        return new UserDao();\n    }\n    @Bean\n    UserService userService(){\n        return new UserService();\n    }\n}\n```\n\n###### 自动注入方式\n\n> 构造器注入，类型和类名三种注入方式。\n>\n> 默认bytype方式\n\n![image-20220927154055940](01.spring-base.assets/image-20220927154055940.png)\n\n- 构造器注入，Spring会优先匹配参数较多的构造方法\n- byName，通过类名注入。及Spring中bean的名称，必须和set方法后半段相同\n- byType：通过类型注入\n\n\n\n> bytype注入\n\napplicationDemoInjectType.xml\n\n```xml\n<bean id=\"daoDemo1\" class=\"com.roily.dao.DaoDemo\">\n</bean>\n<bean id=\"daoDemo2\" class=\"com.roily.dao.DaoDemo\">\n</bean>\n<bean id=\"serviceDemo\" class=\"com.roily.service.ServiceDemo\" autowire=\"byType\">\n</bean>\n```\n\n```java\npublic class ServiceDemo {\n    private DaoDemo daoDemo;\n    public void setDaoDemo(DaoDemo daoDemo) {\n        this.daoDemo = daoDemo;\n    }\n}\n```\n\n> byName注入。==配置文件方式byName不起作用，可能是Qualifier注解没生效==。\n>\n> 所以使用javaConfig测试一下\n\n```java\n@ComponentScan(basePackages = \"com.roily\")\n@Configuration\npublic class ConfigDemo {\n    @Bean(\"daoDemo\")\n    public DaoDemo daoDemo(){\n        return new DaoDemo();\n    }\n    @Bean(\"daoDemoAlias\")\n    public DaoDemo daoDemoAlias(){\n        return new DaoDemo();\n    }\n}\n```\n\n```java\n@Component\npublic class ServiceDemo2 {\n\n    private DaoDemo daoDemo1;\n\n    @Autowired\n    @Qualifier(\"daoDemoAlias\")\n    public void setDaoDemo(DaoDemo daoDemo1) {\n        this.daoDemo1 = daoDemo1;\n    }\n}\n```\n\n\n\n![image-20220929102653241](01.spring-base.assets/image-20220929102653241.png)\n\n######  为何推荐构造器注入？\n\n> 这里推荐使用构造器注入，为何？\n\n构造器注入能够保证所注入的组件不可变，并确保需要的依赖不为空，并且注册进IOC容器的时候保证完全初始化状态。\n\n- 所注入组件不可变：使用final修饰构造器中的参数\n- 依赖不为空：使用构造器注入，避免无参构造，构造方法参数从IOC容器中取。取得到ok，取不到报错\n- 完全初始化状态：使用构造器注入，能够保证，父类、成员变量等都已经初始化过了，最后才执行对应构造方法\n\n\n\n依赖不为空：\n\n> set注入在编译的时候并不会检查，即便依赖项为空，也只能在真正使用的时候才会暴露出来。\n>\n> 如下依赖项为空在调用的时候，会报空指针\n\n```java\n<!--    <bean id=\"userDao\" class=\"com.roily.dao.UserDao\"/>-->\n<bean id=\"userService\" class=\"com.roily.service.UserService\" autowire=\"byName\">\n</bean>\n```\n\n\n\n循环依赖问题：\n\n> set注入会导致循环依赖问题：\n\n```java\npublic class Component1 {\n    @Autowired\n    Component2 component2;\n    public void method() {\n        component2.method();\n    }\n    setter\n}\npublic class Component2 {\n    @Autowired\n    Component1 component1;\n    public void method() {\n        component1.method();\n    }\n    setter（）\n}\n```\n\n```xml\n<bean id=\"component1\" class=\"com.roily.entity.Component1\">\n    <property name=\"component2\" ref=\"component2\"/>\n</bean>\n<bean id=\"component2\" class=\"com.roily.entity.Component2\">\n    <property name=\"component1\" ref=\"component1\"/>\n</bean>\n```\n\n测试：会报错，java.lang.StackOverflowError\n\n```JAVA\n@Test\npublic void testAutoWritexx() {\n\n    final ApplicationContext cpx = new ClassPathXmlApplicationContext(\"application.xml\");\n    final Component1 bean1 = cpx\n            .getBean(Component1.class);\n    bean1.method();\n\n}\n```\n\n> 采用构造器注入的话，会立刻会报错，提示出来  org.springframework.beans.factory.BeanCurrentlyInCreationException\n\n```java\npublic class Component1 {\n    Component2 component2;\n    @Autowired\n    public Component1(final Component2 component2) {\n        this.component2 = component2;\n    }\n    public void method() {\n        component2.method();\n    }\n}\n。。。。Component2同\n```\n\n\n\n###### @Autowrite\n\n> @AutoWrite，有ByType   byName 方式，还有一个require属性。\n>\n> SpringFrameWork包下的注解\n\n@Autowrite可以放在，构造器、方法·、参数、属性、接口\n\nElementType.CONSTRUCTOR, ElementType.METHOD, ElementType.PARAMETER, ElementType.FIELD, ElementType.ANNOTATION_TYPE\n\n环境搭建：\n\n```java\n@Component\npublic class DaoDemo {\n}\n@Component\npublic class ServiceDemo {\n    @Autowired(require = true)\n    private DaoDemo daoDemo;\n}\n@ComponentScan(basePackages = \"com.roily\")\n@Configuration\npublic class ConfigDemo {\n}\n```\n\n- require属性测试\n\n将DaoDemo上的@Component注解注掉，测试：\n\n提示没有Bean\n\n![image-20220927174445053](01.spring-base.assets/image-20220927174445053.png)\n\n将@Autowrite(require = false)，则不会报错\n\n- byType\n\n默认就是bytype的，通过类型查找Bean，如果存在多个候选者则优先选择 类名首字母小写的组件\n\n- byName\n\n想要通过beanName注入依赖，则需要配合@Qualified注解。当存在多个候选者的时候可以配合@Qualified指定\n\n\n\n###### @Resource\n\n> @Resource，首先通过类型查找，存在多个则通过name查找。有一个name属性，注入的组件名称\n>\n> javaax包下的注解是JSR250规范\n\n```java\n@Target({TYPE, FIELD, METHOD})\n@Retention(RUNTIME)\npublic @interface Resource \nString name() default \"\";\n```\n\n可放在属性和方法上。\n\n\n\n\n\n####  控制反转(IOC)\n\n- 控制反转-控制什么？控制Bean的创建和使用。什么反转了？Bean的创建由用户反转为Spring。这就是IOC(Inversion of controler)\n- Spring创建的bean放在哪里？  IOC  Container\n- 配置Spring有哪些方式？ xml配置文件、javaConfig和注解配置\n- bean从Spring  IOC  Container  中获取依赖，注入到当前bean中，此过程叫做依赖注入-DI(Dependency  injection )\n- 依赖注入的方式（构造器注入、Set注入）\n- @Autowrite  @Resource  @inject\n\n\n\n##### Spring Bean是什么？\n\n> Spring的Bean可以认为就是一个组件，这个组件用于实现某个功能，需要某个功能就注册某个组件。\n>\n> Spring为我们提供了简洁方法来调用组件。\n\n##### IOC\n\n> Inversion Of  Control，控制反转，不是技术，而是一种设计思想。在Spring中IOC体现于，对象的创建和管理交由IOC  Contailer，而不是传统的由程序控制。IOC也遵循面向对象法则，可以指导我们设计出松耦合、高内聚的程序。\n\n控制反转\n\n- 控制什么？\n\n  > 控制Bean的创建和生命周期的管理\n\n- 反转？\n\n  > 一开始Bean的创建由程序控制，现有Spring框架，对象的创建和控制权反转到IOC容器\n\n- 依赖注入？\n\n  > IOC是一种设计思想，指导我们设计程序，依赖注入(DI)就是IOC的具体实现方式。\n  >\n  > 依赖注入指的是某个Bean的创建可从Spring容器中获取依赖的其他Bean，此过程称为依赖注入。依赖注入的方式：构造器注入、setter注入。\n\n\n\n#### AOP\n\n> 面向切面编程----Aspect  Oriented Programming。\n\n\n\n##### 术语\n\n- 连接点(JointPoint)：表示需要在程序中插入横切关注点的扩展点，连接点可以是类的初始化、方法调用、字段调用或异常处理等。在Spring中只支持方法执行连接点，在AOP中表示为在哪干。\n- 切入点(PointCut)：选择一组相关连接点的模式\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/foot/pdai/spring/01.spring-base.md b/foot/pdai/spring/01.spring-base.md
--- a/foot/pdai/spring/01.spring-base.md	
+++ b/foot/pdai/spring/01.spring-base.md	
@@ -44,7 +44,7 @@
 
   > AOP - Aspect Oriented Programming
   >
-  > 可降低耦合，核心1就是反射＋代理
+  > 可降低耦合，核心就是反射＋代理
 
 - 容器思想：
 
@@ -154,7 +154,7 @@
 
 - 配置Spring配置文件
 
-  > Spring配置文件模板可从网上拷贝，[官网也有模板](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#spring-core)。
+  > Spring配置文件模板可从网上拷贝，[官网也有模板](https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-factory-metadata)。
   >
   > 根标签是一个`<Beans>`可见这就是一个Bean容器，文件由命名空间和具体Bean组成
 
@@ -174,7 +174,7 @@
 
   > 这里使用配置文件的方式配置Spring，通过BeanFactory的子类之一ClassPatchXmlApplicationContext加载Spring配置文件，将Bean注册到Spring容器中。
 
-  <img src="https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253219.png" alt="image-20220926131901678" style="zoom:33%;" />
+  <img src="https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202209262253219.png" alt="image-20220926131901678" style="zoom: 67%;" />
 
   ```java
   public class demo {
@@ -363,7 +363,7 @@
 public class LogAspect {
     /**
      * 任意返回值
-     * com.roily.service包下任意方法  （。。）代表任意参数的方法
+     * com.roily.service包下任意方法  （..）代表任意参数的方法
      */
     @Pointcut("execution(* com.roily.service.*.*(..))")
     public void pointCut() {
@@ -567,7 +567,7 @@
   public class LogAspect {}
   ```
 
-- javaconfig配置，保留数据源等配置，添加组件扫描和mapper扫描注解
+- javaconfig配置，数据源等配置，添加组件扫描和mapper扫描注解
 
   ```java
   @EnableAspectJAutoProxy//aop,支持代理类
@@ -633,7 +633,7 @@
 
   > 使用JavaConfig代替xml，使用@Bean代替`<bean>`标签
   >
-  > 存java代码配置，扩展性好，易于理解
+  > 纯java代码配置，扩展性好，易于理解
   >
   > 配置多的话，可读性较差
 
@@ -794,7 +794,7 @@
 >
 > 默认bytype方式
 
-![image-20220927154055940](01.spring-base.assets/image-20220927154055940.png)
+![image-20220927154055940](https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202210021049673.png)
 
 - 构造器注入，Spring会优先匹配参数较多的构造方法
 - byName，通过类名注入。及Spring中bean的名称，必须和set方法后半段相同
@@ -859,7 +859,7 @@
 
 
 
-![image-20220929102653241](01.spring-base.assets/image-20220929102653241.png)
+![image-20220929102653241](https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202210021049984.png)
 
 ######  为何推荐构造器注入？
 
@@ -984,7 +984,7 @@
 
 提示没有Bean
 
-![image-20220927174445053](01.spring-base.assets/image-20220927174445053.png)
+![image-20220927174445053](https://xiaochuang6.oss-cn-shanghai.aliyuncs.com/java%E7%AC%94%E8%AE%B0/padi/spring/spring01/202210021049580.png)
 
 将@Autowrite(require = false)，则不会报错
 
@@ -1002,7 +1002,7 @@
 
 > @Resource，首先通过类型查找，存在多个则通过name查找。有一个name属性，注入的组件名称
 >
-> javaax包下的注解是JSR250规范
+> javaax包下的注解，是JSR250规范
 
 ```java
 @Target({TYPE, FIELD, METHOD})
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25__12_42__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25__12_42__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25__12_42__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25__12_42__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]" date="1664080977753" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022/9/25, 12:42 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52__Changes_.xml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2022_9_23_9_52_[Changes]" date="1663897951905" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022/9/23 9:52 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_25,_12_42_[Changes]/shelved.patch	
+++ /dev/null	
@@ -1,35 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"bed07c71-5aa6-478f-ad22-84a18b2955be\" name=\"Changes\" comment=\"merge\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)/java成神之路(基础).md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)/java成神之路(基础).md\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"worktime\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"2Ccb78KeUVafiMzq9wsiAXSh4AU\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"D:\\File\\Desktop\\blogXX\\foot\\.idea\" />\n      <recent name=\"D:\\File\\Desktop\\blogXX\\foot\" />\n      <recent name=\"$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"bed07c71-5aa6-478f-ad22-84a18b2955be\" name=\"Changes\" comment=\"\" />\n      <created>1659104649873</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1659104649873</updated>\n      <workItem from=\"1659104651612\" duration=\"169000\" />\n      <workItem from=\"1659435026542\" duration=\"147000\" />\n      <workItem from=\"1659890507701\" duration=\"105000\" />\n      <workItem from=\"1659969602475\" duration=\"1918000\" />\n      <workItem from=\"1660143366549\" duration=\"1366000\" />\n      <workItem from=\"1660490810386\" duration=\"1601000\" />\n      <workItem from=\"1660660411651\" duration=\"2249000\" />\n      <workItem from=\"1660832696278\" duration=\"3859000\" />\n      <workItem from=\"1661667836964\" duration=\"1497000\" />\n      <workItem from=\"1661787423056\" duration=\"1709000\" />\n      <workItem from=\"1661953837429\" duration=\"1655000\" />\n      <workItem from=\"1662190268090\" duration=\"1208000\" />\n      <workItem from=\"1662308623396\" duration=\"31000\" />\n      <workItem from=\"1662311748618\" duration=\"18000\" />\n      <workItem from=\"1662390195820\" duration=\"637000\" />\n      <workItem from=\"1662399803500\" duration=\"19000\" />\n      <workItem from=\"1662478409533\" duration=\"1711000\" />\n      <workItem from=\"1662488501233\" duration=\"25000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"0802work\">\n      <created>1659435136175</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1659435136175</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"jvm\">\n      <created>1659890561272</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1659890561272</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"collectors\">\n      <created>1660067029357</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660067029357</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"collectors\">\n      <created>1660582779319</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660582779319</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"collectors\">\n      <created>1660668957167</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660668957167</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"0818\">\n      <created>1660756297486</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660756297486</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"0819\">\n      <created>1660842079046</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660842079046</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"0828\">\n      <created>1661698651586</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661698651586</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"0830\">\n      <created>1661797521570</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661797521570</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"0830\">\n      <created>1661960203620</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661960203620</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"0830\">\n      <created>1662311762550</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662311762550</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"0905\">\n      <created>1662399811759</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662399811759</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"0905\">\n      <created>1662488514712</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662488514712</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"merge\">\n      <created>1663080411940</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663080411940</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"merge\">\n      <created>1663080550814</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663080550814</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"16\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n        <option value=\"Space.CommitStatus\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"0802work\" />\n    <MESSAGE value=\"jvm\" />\n    <MESSAGE value=\"collectors\" />\n    <MESSAGE value=\"0818\" />\n    <MESSAGE value=\"0819\" />\n    <MESSAGE value=\"0828\" />\n    <MESSAGE value=\"0830\" />\n    <MESSAGE value=\"0905\" />\n    <MESSAGE value=\"merge\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"merge\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 80f666e935529c26aff895736ad06ad44d23b5bf)
-+++ b/.idea/workspace.xml	(date 1664080721656)
-@@ -2,7 +2,6 @@
- <project version="4">
-   <component name="ChangeListManager">
-     <list default="true" id="bed07c71-5aa6-478f-ad22-84a18b2955be" name="Changes" comment="merge">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)/java成神之路(基础).md" beforeDir="false" afterPath="$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)/java成神之路(基础).md" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -13,7 +12,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="worktime" />
-+        <entry key="$PROJECT_DIR$" value="master" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -72,6 +71,7 @@
-       <workItem from="1662399803500" duration="19000" />
-       <workItem from="1662478409533" duration="1711000" />
-       <workItem from="1662488501233" duration="25000" />
-+      <workItem from="1664080388858" duration="332000" />
-     </task>
-     <task id="LOCAL-00001" summary="0802work">
-       <created>1659435136175</created>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"bed07c71-5aa6-478f-ad22-84a18b2955be\" name=\"Changes\" comment=\"merge\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/foot/pdai/pdai/Pdai.md\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/foot/pdai/pdai/Pdai.md\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"worktime\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"2Ccb78KeUVafiMzq9wsiAXSh4AU\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"D:\\File\\Desktop\\blogXX\\foot\\.idea\" />\n      <recent name=\"D:\\File\\Desktop\\blogXX\\foot\" />\n      <recent name=\"$PROJECT_DIR$/foot/读书笔记/java成神之路(基础)\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"bed07c71-5aa6-478f-ad22-84a18b2955be\" name=\"Changes\" comment=\"\" />\n      <created>1659104649873</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1659104649873</updated>\n      <workItem from=\"1659104651612\" duration=\"169000\" />\n      <workItem from=\"1659435026542\" duration=\"147000\" />\n      <workItem from=\"1659890507701\" duration=\"105000\" />\n      <workItem from=\"1659969602475\" duration=\"1918000\" />\n      <workItem from=\"1660143366549\" duration=\"1366000\" />\n      <workItem from=\"1660490810386\" duration=\"1601000\" />\n      <workItem from=\"1660660411651\" duration=\"2249000\" />\n      <workItem from=\"1660832696278\" duration=\"3859000\" />\n      <workItem from=\"1661667836964\" duration=\"1497000\" />\n      <workItem from=\"1661787423056\" duration=\"1709000\" />\n      <workItem from=\"1661953837429\" duration=\"1655000\" />\n      <workItem from=\"1662190268090\" duration=\"1208000\" />\n      <workItem from=\"1662308623396\" duration=\"31000\" />\n      <workItem from=\"1662311748618\" duration=\"18000\" />\n      <workItem from=\"1662390195820\" duration=\"637000\" />\n      <workItem from=\"1662399803500\" duration=\"19000\" />\n      <workItem from=\"1662478409533\" duration=\"1711000\" />\n      <workItem from=\"1662488501233\" duration=\"25000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"0802work\">\n      <created>1659435136175</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1659435136175</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"jvm\">\n      <created>1659890561272</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1659890561272</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"collectors\">\n      <created>1660067029357</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660067029357</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"collectors\">\n      <created>1660582779319</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660582779319</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"collectors\">\n      <created>1660668957167</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660668957167</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"0818\">\n      <created>1660756297486</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660756297486</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"0819\">\n      <created>1660842079046</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1660842079046</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"0828\">\n      <created>1661698651586</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661698651586</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"0830\">\n      <created>1661797521570</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661797521570</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"0830\">\n      <created>1661960203620</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661960203620</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"0830\">\n      <created>1662311762550</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662311762550</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"0905\">\n      <created>1662399811759</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662399811759</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"0905\">\n      <created>1662488514712</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662488514712</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"merge\">\n      <created>1663080411940</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663080411940</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"merge\">\n      <created>1663080550814</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1663080550814</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"merge\">\n      <created>1664081524302</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1664081524302</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"17\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n        <option value=\"Space.CommitStatus\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"0802work\" />\n    <MESSAGE value=\"jvm\" />\n    <MESSAGE value=\"collectors\" />\n    <MESSAGE value=\"0818\" />\n    <MESSAGE value=\"0819\" />\n    <MESSAGE value=\"0828\" />\n    <MESSAGE value=\"0830\" />\n    <MESSAGE value=\"0905\" />\n    <MESSAGE value=\"merge\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"merge\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -2,8 +2,10 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="bed07c71-5aa6-478f-ad22-84a18b2955be" name="Changes" comment="merge">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022_9_23_9_52__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/foot/pdai/pdai/Pdai.md" beforeDir="false" afterPath="$PROJECT_DIR$/foot/pdai/pdai/Pdai.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/foot/pdai/spring/01.spring-base.md" beforeDir="false" afterPath="$PROJECT_DIR$/foot/pdai/spring/01.spring-base.md" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -72,6 +74,7 @@
       <workItem from="1662399803500" duration="19000" />
       <workItem from="1662478409533" duration="1711000" />
       <workItem from="1662488501233" duration="25000" />
+      <workItem from="1664678730057" duration="695000" />
     </task>
     <task id="LOCAL-00001" summary="0802work">
       <created>1659435136175</created>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -3,4 +3,7 @@
   <component name="ProjectRootManager">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
+  <component name="ProjectType">
+    <option name="id" value="jpab" />
+  </component>
 </project>
\ No newline at end of file
